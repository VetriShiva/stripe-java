// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service.issuing;

import com.stripe.exception.StripeException;
import com.stripe.model.issuing.Transaction;
import com.stripe.model.issuing.TransactionCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.issuing.TransactionListParams;
import com.stripe.param.issuing.TransactionRetrieveParams;
import com.stripe.param.issuing.TransactionUpdateParams;

public class TransactionService extends ApiService {
  /**
   * Returns a list of Issuing <code>Transaction</code> objects. The objects are sorted in
   * descending order by creation date, with the most recently created object appearing first.
   */
  public TransactionCollection list(TransactionListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of Issuing <code>Transaction</code> objects. The objects are sorted in
   * descending order by creation date, with the most recently created object appearing first.
   */
  public TransactionCollection list(TransactionListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/transactions");
    return requestCollection(url, params, TransactionCollection.class, options);
  }

  /** Retrieves an Issuing <code>Transaction</code> object. */
  public Transaction retrieve(String transaction, TransactionRetrieveParams params)
      throws StripeException {
    return retrieve(transaction, params, (RequestOptions) null);
  }

  /** Retrieves an Issuing <code>Transaction</code> object. */
  public Transaction retrieve(
      String transaction, TransactionRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/transactions/%s", transaction);
    return request(ApiResource.RequestMethod.GET, url, params, Transaction.class, options);
  }

  /**
   * Updates the specified Issuing <code>Transaction</code> object by setting the values of the
   * parameters passed. Any parameters not provided will be left unchanged.
   */
  public Transaction update(String transaction, TransactionUpdateParams params)
      throws StripeException {
    return update(transaction, params, (RequestOptions) null);
  }

  /**
   * Updates the specified Issuing <code>Transaction</code> object by setting the values of the
   * parameters passed. Any parameters not provided will be left unchanged.
   */
  public Transaction update(
      String transaction, TransactionUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/transactions/%s", transaction);
    return request(ApiResource.RequestMethod.POST, url, params, Transaction.class, options);
  }
}
