// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service.issuing;

import com.stripe.exception.StripeException;
import com.stripe.model.issuing.Authorization;
import com.stripe.model.issuing.AuthorizationCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.issuing.AuthorizationApproveParams;
import com.stripe.param.issuing.AuthorizationDeclineParams;
import com.stripe.param.issuing.AuthorizationListParams;
import com.stripe.param.issuing.AuthorizationRetrieveParams;
import com.stripe.param.issuing.AuthorizationUpdateParams;

public class AuthorizationService extends ApiService {
  /** Approves a pending Issuing <code>Authorization</code> object. */
  public Authorization approve(String authorization, AuthorizationApproveParams params)
      throws StripeException {
    return approve(authorization, params, (RequestOptions) null);
  }

  /** Approves a pending Issuing <code>Authorization</code> object. */
  public Authorization approve(
      String authorization, AuthorizationApproveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/authorizations/%s/approve", authorization);
    return request(ApiResource.RequestMethod.POST, url, params, Authorization.class, options);
  }

  /** Declines a pending Issuing <code>Authorization</code> object. */
  public Authorization decline(String authorization, AuthorizationDeclineParams params)
      throws StripeException {
    return decline(authorization, params, (RequestOptions) null);
  }

  /** Declines a pending Issuing <code>Authorization</code> object. */
  public Authorization decline(
      String authorization, AuthorizationDeclineParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/authorizations/%s/decline", authorization);
    return request(ApiResource.RequestMethod.POST, url, params, Authorization.class, options);
  }

  /**
   * Returns a list of Issuing <code>Authorization</code> objects. The objects are sorted in
   * descending order by creation date, with the most recently created object appearing first.
   */
  public AuthorizationCollection list(AuthorizationListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /**
   * Returns a list of Issuing <code>Authorization</code> objects. The objects are sorted in
   * descending order by creation date, with the most recently created object appearing first.
   */
  public AuthorizationCollection list(AuthorizationListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/authorizations");
    return requestCollection(url, params, AuthorizationCollection.class, options);
  }

  /** Retrieves an Issuing <code>Authorization</code> object. */
  public Authorization retrieve(String authorization, AuthorizationRetrieveParams params)
      throws StripeException {
    return retrieve(authorization, params, (RequestOptions) null);
  }

  /** Retrieves an Issuing <code>Authorization</code> object. */
  public Authorization retrieve(
      String authorization, AuthorizationRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/authorizations/%s", authorization);
    return request(ApiResource.RequestMethod.GET, url, params, Authorization.class, options);
  }

  /**
   * Updates the specified Issuing <code>Authorization</code> object by setting the values of the
   * parameters passed. Any parameters not provided will be left unchanged.
   */
  public Authorization update(String authorization, AuthorizationUpdateParams params)
      throws StripeException {
    return update(authorization, params, (RequestOptions) null);
  }

  /**
   * Updates the specified Issuing <code>Authorization</code> object by setting the values of the
   * parameters passed. Any parameters not provided will be left unchanged.
   */
  public Authorization update(
      String authorization, AuthorizationUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/issuing/authorizations/%s", authorization);
    return request(ApiResource.RequestMethod.POST, url, params, Authorization.class, options);
  }
}
