// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.service;

import com.stripe.exception.StripeException;
import com.stripe.model.PaymentMethod;
import com.stripe.model.PaymentMethodCollection;
import com.stripe.net.ApiResource;
import com.stripe.net.ApiService;
import com.stripe.net.RequestOptions;
import com.stripe.param.PaymentMethodAttachParams;
import com.stripe.param.PaymentMethodCreateParams;
import com.stripe.param.PaymentMethodDetachParams;
import com.stripe.param.PaymentMethodListParams;
import com.stripe.param.PaymentMethodRetrieveParams;
import com.stripe.param.PaymentMethodUpdateParams;

public class PaymentMethodService extends ApiService {
  /** Attaches a PaymentMethod object to a Customer. */
  public PaymentMethod attach(String paymentMethod, PaymentMethodAttachParams params)
      throws StripeException {
    return attach(paymentMethod, params, (RequestOptions) null);
  }

  /** Attaches a PaymentMethod object to a Customer. */
  public PaymentMethod attach(
      String paymentMethod, PaymentMethodAttachParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/payment_methods/%s/attach", paymentMethod);
    return request(ApiResource.RequestMethod.POST, url, params, PaymentMethod.class, options);
  }

  /**
   * Creates a PaymentMethod object. Read the <a
   * href="/docs/stripe-js/reference#stripe-create-payment-method">Stripe.js reference</a> to learn
   * how to create PaymentMethods via Stripe.js.
   */
  public PaymentMethod create(PaymentMethodCreateParams params) throws StripeException {
    return create(params, (RequestOptions) null);
  }

  /**
   * Creates a PaymentMethod object. Read the <a
   * href="/docs/stripe-js/reference#stripe-create-payment-method">Stripe.js reference</a> to learn
   * how to create PaymentMethods via Stripe.js.
   */
  public PaymentMethod create(PaymentMethodCreateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/payment_methods");
    return request(ApiResource.RequestMethod.POST, url, params, PaymentMethod.class, options);
  }

  /** Detaches a PaymentMethod object from a Customer. */
  public PaymentMethod detach(String paymentMethod, PaymentMethodDetachParams params)
      throws StripeException {
    return detach(paymentMethod, params, (RequestOptions) null);
  }

  /** Detaches a PaymentMethod object from a Customer. */
  public PaymentMethod detach(
      String paymentMethod, PaymentMethodDetachParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/payment_methods/%s/detach", paymentMethod);
    return request(ApiResource.RequestMethod.POST, url, params, PaymentMethod.class, options);
  }

  /** Returns a list of PaymentMethods for a given Customer. */
  public PaymentMethodCollection list(PaymentMethodListParams params) throws StripeException {
    return list(params, (RequestOptions) null);
  }

  /** Returns a list of PaymentMethods for a given Customer. */
  public PaymentMethodCollection list(PaymentMethodListParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/payment_methods");
    return requestCollection(url, params, PaymentMethodCollection.class, options);
  }

  /** Retrieves a PaymentMethod object. */
  public PaymentMethod retrieve(String paymentMethod, PaymentMethodRetrieveParams params)
      throws StripeException {
    return retrieve(paymentMethod, params, (RequestOptions) null);
  }

  /** Retrieves a PaymentMethod object. */
  public PaymentMethod retrieve(
      String paymentMethod, PaymentMethodRetrieveParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/payment_methods/%s", paymentMethod);
    return request(ApiResource.RequestMethod.GET, url, params, PaymentMethod.class, options);
  }

  /** Updates a PaymentMethod object. A PaymentMethod must be attached a customer to be updated. */
  public PaymentMethod update(String paymentMethod, PaymentMethodUpdateParams params)
      throws StripeException {
    return update(paymentMethod, params, (RequestOptions) null);
  }

  /** Updates a PaymentMethod object. A PaymentMethod must be attached a customer to be updated. */
  public PaymentMethod update(
      String paymentMethod, PaymentMethodUpdateParams params, RequestOptions options)
      throws StripeException {
    String url = resourceUrl("/v1/payment_methods/%s", paymentMethod);
    return request(ApiResource.RequestMethod.POST, url, params, PaymentMethod.class, options);
  }
}
